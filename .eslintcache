[{"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\index.js":"1","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\reportWebVitals.js":"2","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\App.js":"3","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\Routes.js":"4","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\FitnessTracker.jsx":"5","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\Agenda.jsx":"6","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\Journal.jsx":"7","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\Auth.jsx":"8","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\AppBar.jsx":"9","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\JournalEntry.jsx":"10","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\ListSelection.jsx":"11","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\actions\\Auth.Action.js":"12","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\actions\\ToDo.Action.js":"13","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\Drawer.jsx":"14","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\actions\\types.js":"15","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\store.js":"16","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\reducers\\index.js":"17","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\reducers\\Auth.Reducer.js":"18","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\reducers\\Todo.Reducer.js":"19","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\shared\\utility.js":"20","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\GoalList.jsx":"21","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\Rating.jsx":"22"},{"size":517,"mtime":1613096192368,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1613096192368,"results":"25","hashOfConfig":"24"},{"size":759,"mtime":1613427484304,"results":"26","hashOfConfig":"24"},{"size":1500,"mtime":1613435821822,"results":"27","hashOfConfig":"24"},{"size":7763,"mtime":1613096192364,"results":"28","hashOfConfig":"24"},{"size":121,"mtime":1613096192364,"results":"29","hashOfConfig":"24"},{"size":123,"mtime":1613096192364,"results":"30","hashOfConfig":"24"},{"size":3868,"mtime":1613096192364,"results":"31","hashOfConfig":"24"},{"size":1157,"mtime":1613096192360,"results":"32","hashOfConfig":"24"},{"size":3586,"mtime":1613438044951,"results":"33","hashOfConfig":"24"},{"size":11970,"mtime":1613435821822,"results":"34","hashOfConfig":"24"},{"size":2733,"mtime":1613096192372,"results":"35","hashOfConfig":"24"},{"size":1765,"mtime":1613096192372,"results":"36","hashOfConfig":"24"},{"size":3642,"mtime":1613427325476,"results":"37","hashOfConfig":"24"},{"size":691,"mtime":1613096192372,"results":"38","hashOfConfig":"24"},{"size":1230,"mtime":1613096192376,"results":"39","hashOfConfig":"24"},{"size":182,"mtime":1613096192376,"results":"40","hashOfConfig":"24"},{"size":1532,"mtime":1613096192372,"results":"41","hashOfConfig":"24"},{"size":1128,"mtime":1613096192376,"results":"42","hashOfConfig":"24"},{"size":142,"mtime":1613096192372,"results":"43","hashOfConfig":"24"},{"size":5660,"mtime":1613435812440,"results":"44","hashOfConfig":"24"},{"size":657,"mtime":1613438125954,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"79vfyr",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\index.js",[],["98","99"],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\reportWebVitals.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\App.js",["100","101"],"import React, {useState, useEffect}from \"react\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport green from '@material-ui/core/colors/green';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nfunction App() {\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: green,\r\n    },\r\n    status: {\r\n      danger: 'orange',\r\n    },\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <Routes />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\Routes.js",["102","103","104","105"],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\FitnessTracker.jsx",["106","107","108"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {\r\n  Card,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Chip,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"3%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst FitnessTracker = () => {\r\n  const classes = useStyles();\r\n\r\n  const userId = useSelector((state) => state.Auth.userId);\r\n\r\n  const [titles, setTitles] = React.useState([]);\r\n  const [selected, setSelected] = React.useState(\"\");\r\n  const [rows, setRows] = React.useState([]);\r\n  const [selectedValues, setSelectedValues] = React.useState();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [numTrack, setNumTrack] = React.useState({\r\n    creator: userId,\r\n    value: \"\",\r\n    title: \"\",\r\n  });\r\n\r\n  const columns = [\r\n    { id: \"createdAt\", label: \"Date\", minWidth: 170, align: \"center\" },\r\n\r\n    {\r\n      id: \"value\",\r\n      label: selected,\r\n      minWidth: 170,\r\n      align: \"center\",\r\n      format: (value) => value.toLocaleString(\"en-US\"),\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    axios.get(`/api/getnumtackertitles/${userId}`).then((res) => {\r\n      setTitles(res.data.numtrackTitle);\r\n    });\r\n  }, []);\r\n\r\n  const handleSelected = (title) => {\r\n    setSelected(title);\r\n    setPage(0);\r\n    setRowsPerPage(10)\r\n\r\n    axios\r\n      .get(`/api/numtracker/${userId}/${title}`)\r\n      .then((res) => setRows(res.data.numtracker));\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleNumTrackTitleSubmit = (numTrack) => {\r\n    axios.post(`/api/addnumtracker/`, { numTracker: numTrack });\r\n    setSelected(numTrack.title)\r\n    axios.get(`/api/getnumtackertitles/${userId}`).then((res) => {\r\n      setTitles(res.data.numtrackTitle);\r\n    });\r\n  };\r\n\r\n  const handleNumTrackValueSubmit = (numTrack) => {\r\n    axios.post(`/api/addnumtracker/`, { numTracker: numTrack })\r\n      setNumTrack({\r\n        creator: userId,\r\n        value: \"\",\r\n        title: \"\",\r\n      });\r\n    setSelected('')\r\n  };\r\n\r\n  \r\n  const handleChangeTitle = (event) => {\r\n    setNumTrack({\r\n      ...numTrack,\r\n      [event.target.name]: event.target.value,\r\n      value: 0,\r\n    });\r\n  };\r\n\r\n  const handleChangeValue = (event) => {\r\n    setNumTrack({\r\n      ...numTrack,\r\n      [event.target.name]: event.target.value,\r\n      title: selected,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Card>\r\n          <TextField\r\n            id='standard-basic'\r\n            label='Enter New Goal'\r\n            fullWidth\r\n            margin='normal'\r\n            name='title'\r\n            value={numTrack.title}\r\n            onChange={(e) => handleChangeTitle(e)}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position='end'>\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      handleNumTrackTitleSubmit(numTrack);\r\n                    }}>\r\n                    <IoIosSend />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Card>\r\n        <Grid\r\n          container\r\n          direction='row'\r\n          justify='space-evenly'\r\n          alignItems='center'\r\n          className={classes.root}>\r\n          {titles.map((title) => (\r\n            <div key={title}>\r\n              <Grid>\r\n                <Chip\r\n                  label={title}\r\n                  clickable\r\n                  color={selected === title ? \"primary\" : \"default\"}\r\n                  onClick={() => handleSelected(title)}\r\n                />\r\n              </Grid>\r\n            </div>\r\n          ))}\r\n        </Grid>\r\n        {selected && (\r\n          <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n              <Table stickyHeader aria-label='sticky table'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}>\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role='checkbox'\r\n                          tabIndex={-1}\r\n                          key={row._id}>\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.format && typeof value === \"number\"\r\n                                  ? column.format(value)\r\n                                  : value}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Grid\r\n              container\r\n              direction='row'\r\n              justify='space-evenly'\r\n              alignItems='center'>\r\n              <Grid item xs={7}>\r\n                <TextField\r\n                  id='standard-basic'\r\n                  label={\"Enter New \" + selected}\r\n                  margin='normal'\r\n                  name='value'\r\n                  fullWidth\r\n                  value={numTrack.value}\r\n                  onChange={(e) => handleChangeValue(e)}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            handleNumTrackValueSubmit(numTrack);\r\n                          }}>\r\n                          <IoIosSend />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component='div'\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Grid>\r\n          </Paper>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FitnessTracker;\r\n","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\Agenda.jsx",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\Journal.jsx",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\Auth.jsx",["109","110","111","112","113"],"import React, { useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { GiKeyLock } from \"react-icons/gi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport * as action from \"../store/actions/Auth.Action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  green: {\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n\r\n  spaceBetween: {\r\n    marginTop: \"1rem\",\r\n  },\r\n}));\r\n\r\nconst Auth = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const auth = useSelector((state) => state.Auth);\r\n\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n    redirectToReferrer: false,\r\n  });\r\n\r\n  const { email, password, loading, error, redirectToReferrer } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    dispatch(action.auth(email, password, isSignup));\r\n  };\r\n\r\n  const redirectUser = () => {\r\n    if (auth.userId !== null) {\r\n      return <Redirect to='/listselection' />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth='md'>\r\n        <Card className='AuthTopMargin'>\r\n          <Typography\r\n            variant='h3'\r\n            color='primary'\r\n            align='center'\r\n            component='h2'>\r\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction='column'\r\n            justify='space-between'\r\n            alignItems='center'>\r\n            <Grid>\r\n              <Avatar className={classes.green} sizes='lg'>\r\n                <GiKeyLock />\r\n              </Avatar>\r\n            </Grid>\r\n            <form>\r\n              <Grid className={classes.spaceBetween}>\r\n                <TextField\r\n                  fullwidth\r\n                  variant='outlined'\r\n                  label='Enter Email'\r\n                  type='email'\r\n                  onChange={handleChange(\"email\")}\r\n                  value={email}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid className={classes.spaceBetween}>\r\n                <TextField\r\n                  fullwidth\r\n                  variant='outlined'\r\n                  label='Enter Password'\r\n                  type='password'\r\n                  value={password}\r\n                  onChange={handleChange(\"password\")}\r\n                />\r\n              </Grid>\r\n              <Grid className={classes.spaceBetween}>\r\n                <Button\r\n                  type='submit'\r\n                  onClick={clickSubmit}\r\n                  variant='contained'\r\n                  color='primary'\r\n                  fullWidth>\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n              <Grid>\r\n                <Button fullWidth onClick={()=>setIsSignup(!isSignup)}>{!isSignup?'New User':'Login'} </Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Card>\r\n      </Container>\r\n      {redirectUser()}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\AppBar.jsx",["114","115"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { MdMenu } from \"react-icons/md\";\r\nimport { GiCyberEye } from \"react-icons/gi\";\r\nimport Drawer from './Drawer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom:'20px'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textDecoration:'line-through'\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n        <IconButton color='inherit'><GiCyberEye/></IconButton>\r\n       \r\n          <Typography variant='h6' className={classes.title} >\r\n            Productive\r\n          </Typography>\r\n       \r\n          <Drawer/>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\JournalEntry.jsx",["116","117","118","119","120","121","122","123","124","125"],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\containers\\ListSelection.jsx",["126","127","128","129","130","131","132"],"import React, { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport clsx from \"clsx\";\r\nimport { IoIosSend } from \"react-icons/io\";\r\n\r\nimport {\r\n  initTodoLists,\r\n  setTodoLists,\r\n  initCompleteCount,\r\n  initTotalTasks,\r\n  setCompleteCount,\r\n} from \"../store/actions/ToDo.Action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport GoalList from \"./GoalList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: \"50%\",\r\n  },\r\n\r\n  archive: {\r\n    float: \"right\",\r\n  },\r\n}));\r\n\r\nconst ListSelection = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userId = useSelector((state) => state.Auth.userId);\r\n  const todoLists = useSelector((state) => state.Todos.todoLists);\r\n  const completeCount = useSelector((state) => state.Todos.totalCompletes);\r\n  const totalTasks = useSelector((state) => state.Todos.totalTasks);\r\n\r\n  const [newtask, setnewtask] = useState({\r\n    title: \"\",\r\n    creator: userId,\r\n    task: \"create a list\",\r\n    isComplete: false,\r\n    isVisible: true,\r\n  });\r\n\r\n  const [openDialog, setopenDialog] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [checked, setChecked] = React.useState([0]);\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [inProgress, setinProgress] = React.useState(\"\");\r\n  const [timerOn, settimerOn] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(initCompleteCount(userId));\r\n    dispatch(initTodoLists(userId));\r\n    dispatch(initTotalTasks(userId));\r\n  }, []);\r\n\r\n  const initTodos = (todoListName) => {\r\n    axios\r\n      .get(`/api/todolist/${userId}/${todoListName}`)\r\n      .then((res) => setTodos(res.data.todoData));\r\n  };\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const handleTimerButtonClick = (todo) => {\r\n    if (!timerOn) {\r\n      setinProgress(todo._id);\r\n      axios.patch(`/api/updateStartTime/${todo._id}`, { time: moment() });\r\n      setSuccess(false);\r\n      settimerOn(true);\r\n    } else {\r\n      axios.patch(`/api/updateEndTime/${todo._id}`, { time: moment() });\r\n      setSuccess(true);\r\n      settimerOn(false);\r\n      setTimeout(() => {\r\n        setinProgress(\"\");\r\n        setSuccess(false);\r\n      }, 2000);\r\n\r\n      initTodos(todo.title);\r\n    }\r\n  };\r\n\r\n  const handleOpen = (title) => {\r\n    setIsLoading(true);\r\n    setSelected(title);\r\n    setnewtask({\r\n      title: title,\r\n      task: \"\",\r\n      isComplete: false,\r\n      isVisible: true,\r\n      creator: userId,\r\n    });\r\n    initTodos(title);\r\n    setOpen(true);\r\n    setIsLoading(false);\r\n\r\n    console.log(selected);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsLoading(true);\r\n    setSelected();\r\n    setnewtask({\r\n      title: \"\",\r\n      creator: userId,\r\n      task: \"create a list\",\r\n      isComplete: false,\r\n      isVisible: true,\r\n    });\r\n    setOpen(false);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleToggleComplete = (todo) => () => {\r\n    let isCompleteData = true;\r\n    todo.isComplete == isCompleteData\r\n      ? (isCompleteData = false)\r\n      : (isCompleteData = true);\r\n\r\n    axios\r\n      .patch(`api/CompleteTodo/${todo._id}`, { isCompleteData })\r\n      .then((res) => {\r\n        axios.get(`api/todolistCompletes/${userId}`).then((res) => {\r\n          dispatch(setCompleteCount(res.data.Completes));\r\n        });\r\n      });\r\n    let dtodos = todos.map((dtodo, i) =>\r\n      dtodo._id == todo._id ? { ...todo, isComplete: isCompleteData } : todos[i]\r\n    );\r\n    setTodos(dtodos);\r\n  };\r\n\r\n  const handleToggleRoutineSwitch = (todo) => {\r\n    let isRoutineData = true;\r\n    todo.isRoutine == isRoutineData\r\n      ? (isRoutineData = false)\r\n      : (isRoutineData = true);\r\n    axios.patch(`/api/toggleRoutine/${todo._id}`, { isRoutineData });\r\n    let dtodos = todos.map((dtodo, i) =>\r\n      dtodo._id == todo._id ? { ...todo, isRoutine: isRoutineData } : todos[i]\r\n    );\r\n    setTodos(dtodos);\r\n  };\r\n\r\n  const handleSubmitNewTodoList = () => {\r\n    axios.post(\"/api/addTodo/\", { newtask }).then(() => {\r\n      dispatch(initTodoLists(userId));\r\n      dispatch(initTotalTasks(userId));\r\n    });\r\n    setnewtask({\r\n      title: \"\",\r\n      creator: userId,\r\n      task: \"create a list\",\r\n      isComplete: false,\r\n      isVisible: true,\r\n    });\r\n  };\r\n\r\n  const handleChangeNewTodoList = (event) => {\r\n    setnewtask({\r\n      [event.target.name]: event.target.value,\r\n      task: \"create a list\",\r\n      creator: userId,\r\n    });\r\n  };\r\n\r\n  const handleSubmitNewTodo = () => {\r\n    setIsLoading(true);\r\n    setnewtask({ ...newtask, title: selected });\r\n    axios.post(\"/api/addTodo\", { newtask }).then((res) => {\r\n      console.log(res.data);\r\n      let ftodos = todos;\r\n      ftodos.push(res.data);\r\n      console.log(ftodos);\r\n      setTodos(ftodos);\r\n      dispatch(initTotalTasks(userId));\r\n      setIsLoading(false);\r\n      setnewtask({\r\n        title: selected,\r\n        task: \"\",\r\n        isComplete: false,\r\n        isVisible: true,\r\n        creator: userId,\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleChangeNewTask = (event) => {\r\n    setnewtask({ ...newtask, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleArchiveComplete = (archiveStatus, todoListName) => {\r\n    setIsLoading(true);\r\n    let isVisibleData = archiveStatus;\r\n    axios\r\n      .patch(`api/archiveTodo/${userId}/${todoListName}`, { isVisibleData })\r\n      .then(\r\n        axios\r\n          .get(`/api/todolist/${userId}/${todoListName}`)\r\n          .then((res) => setTodos(res.data.todoData))\r\n      );\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth='lg'>\r\n      <Card>\r\n        <Grid container direction='row' justify='center' alignItems='center'>\r\n          <Grid item xs={10}>\r\n            <TextField\r\n              name='title'\r\n              label='Enter New Goal List'\r\n              fullWidth\r\n              margin='normal'\r\n              value={newtask.title}\r\n              onChange={(e) => handleChangeNewTodoList(e)}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton onClick={handleSubmitNewTodoList}>\r\n                      <IoIosSend />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant='caption' color='initial'>\r\n              Completed Total of {completeCount} tasks of {totalTasks} tasks\r\n              created!\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Grid\r\n        container\r\n        direction='row'\r\n        justify='space-evenly'\r\n        alignItems='flex-start'>\r\n        <Grid item xs={3}>\r\n          <Card className='AuthTopMargin'>\r\n            <CardActions onClick={() => handleOpen(\"TodaysAgenda\")}>\r\n              <Grid\r\n                container\r\n                direction='row'\r\n                justify='center'\r\n                alignItems='center'>\r\n                <Grid item>\r\n                  <Typography variant='h4' align='center'>\r\n                    Todays Agenda\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n          </Card>\r\n\r\n          <Card className='AuthTopMargin'>\r\n            <CardActions onClick={() => handleOpen(\"InCompletes\")}>\r\n              <Grid\r\n                container\r\n                direction='row'\r\n                justify='center'\r\n                alignItems='center'>\r\n                <Grid item>\r\n                  <Typography variant='h4' align='center'>\r\n                    In Completes\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n          </Card>\r\n\r\n          <Card className='AuthTopMargin'>\r\n            <CardActions onClick={() => handleOpen(\"OverDue\")}>\r\n              <Grid\r\n                container\r\n                direction='row'\r\n                justify='center'\r\n                alignItems='center'>\r\n                <Grid item>\r\n                  <Typography variant='h4' align='center'>\r\n                    Over Due\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n          </Card>\r\n          <Card className='AuthTopMargin'>\r\n          <CardActions onClick={() => handleOpen(\"ActiveRoutines\")}>\r\n            <Grid\r\n              container\r\n              direction='row'\r\n              justify='center'\r\n              alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='h4' align='center'>\r\n                  Active Routines\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActions>\r\n        </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={8}>\r\n          {todoLists.map((title) => (\r\n            <Card key={title} className='AuthTopMargin'>\r\n              <CardActions onClick={() => handleOpen(title)}>\r\n                <Grid\r\n                  container\r\n                  direction='row'\r\n                  justify='center'\r\n                  alignItems='center'>\r\n                  <Grid item>\r\n                    <Typography variant='h4' align='center'>\r\n                      {title}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardActions>\r\n            </Card>\r\n          ))}\r\n\r\n          <Modal\r\n            aria-labelledby='transition-modal-title'\r\n            aria-describedby='transition-modal-description'\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}>\r\n            <Fade in={open}>\r\n              {isLoading === false ? (\r\n                <GoalList\r\n                  title={selected}\r\n                  handleToggle={handleToggleComplete}\r\n                  checked={checked}\r\n                  todos={todos}\r\n                  handleSubmitNewTodo={handleSubmitNewTodo}\r\n                  handleChangeNewTask={handleChangeNewTask}\r\n                  newtask={newtask}\r\n                  handleArchiveComplete={handleArchiveComplete}\r\n                  handleToggleRoutineSwitch={handleToggleRoutineSwitch}\r\n                  openDialog={openDialog}\r\n                  setopenDialog={setopenDialog}\r\n                  isLoading={isLoading}\r\n                  inProgress={inProgress}\r\n                  handleTimerButtonClick={handleTimerButtonClick}\r\n                  buttonClassname={buttonClassname}\r\n                  timerOn={timerOn}\r\n                  success={success}\r\n                />\r\n              ) : (\r\n                <CircularProgress />\r\n              )}\r\n            </Fade>\r\n          </Modal>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListSelection;\r\n","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\actions\\Auth.Action.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\actions\\ToDo.Action.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\Drawer.jsx",["133","134"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport { IoLogIn } from \"react-icons/io5\";\r\nimport { FaUserAstronaut } from \"react-icons/fa\";\r\nimport { GoChecklist } from \"react-icons/go\";\r\nimport { CgPlayListCheck } from \"react-icons/cg\";\r\nimport { BsGraphUp } from \"react-icons/bs\";\r\nimport { FaJournalWhills } from \"react-icons/fa\";\r\nimport { GiScrollQuill } from \"react-icons/gi\";\r\nimport { MdMenu } from \"react-icons/md\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role='presentation'\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}>\r\n      <List>\r\n        <Link href='/'>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <IoLogIn />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Sign In\"} />\r\n          </ListItem>\r\n          <Divider />\r\n        </Link>\r\n        <Link href='/signup'>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <FaUserAstronaut />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Sign Up\"} />\r\n          </ListItem>\r\n          <Divider />\r\n        </Link>\r\n\r\n        <Link href='/ListSelection'>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <GoChecklist />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"List Selection\"} />\r\n          </ListItem>\r\n          <Divider />\r\n        </Link>\r\n        <Link href='/FitnessTracker'>\r\n          <ListItem button href='/FitnessTracker'>\r\n            <ListItemIcon>\r\n              <BsGraphUp />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Tracker\"} />\r\n          </ListItem>\r\n          <Divider />\r\n        </Link>\r\n        <Link href='/JournalEntry'>\r\n          <ListItem button href='/JournalEntry'>\r\n            <ListItemIcon>\r\n              <GiScrollQuill />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Journal Entry\"} />\r\n          </ListItem>\r\n          <Divider />\r\n        </Link>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <IconButton color='inherit' onClick={toggleDrawer(anchor, true)}>\r\n            <MdMenu />\r\n          </IconButton>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\actions\\types.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\store.js",["135","136"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools, actionCreators } from \"redux-devtools-extension\";\r\n// middlewares\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n/**\r\n * Create a Redux store that holds the app state.\r\n * \r\n \r\n */\r\nconst composeEnhancers = composeWithDevTools({\r\n  name: `Redux`,\r\n  realtime: true,\r\n  trace: true,\r\n  traceLimit: 25,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware, logger))\r\n);\r\n\r\nstore.subscribe(() => {\r\n    saveToLocalStorage(store.getState());\r\n  \r\n  });\r\n\r\nexport default store;\r\n","C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\reducers\\index.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\reducers\\Auth.Reducer.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\store\\reducers\\Todo.Reducer.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\shared\\utility.js",[],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\GoalList.jsx",["137","138","139"],"C:\\Users\\odess\\Desktop\\GNBProductivity\\client\\src\\components\\Rating.jsx",["140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":24},{"ruleId":"145","severity":1,"message":"149","line":1,"column":26,"nodeType":"147","messageId":"148","endLine":1,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"150","line":5,"column":3,"nodeType":"147","messageId":"148","endLine":5,"endColumn":11},{"ruleId":"145","severity":1,"message":"151","line":19,"column":10,"nodeType":"147","messageId":"148","endLine":19,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":30,"column":7,"nodeType":"154","endLine":30,"endColumn":9,"suggestions":"155"},{"ruleId":"145","severity":1,"message":"156","line":42,"column":10,"nodeType":"147","messageId":"148","endLine":42,"endColumn":24},{"ruleId":"145","severity":1,"message":"157","line":42,"column":26,"nodeType":"147","messageId":"148","endLine":42,"endColumn":43},{"ruleId":"152","severity":1,"message":"158","line":67,"column":6,"nodeType":"154","endLine":67,"endColumn":8,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"160","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":19},{"ruleId":"145","severity":1,"message":"161","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":19},{"ruleId":"145","severity":1,"message":"162","line":44,"column":28,"nodeType":"147","messageId":"148","endLine":44,"endColumn":35},{"ruleId":"145","severity":1,"message":"163","line":44,"column":37,"nodeType":"147","messageId":"148","endLine":44,"endColumn":42},{"ruleId":"145","severity":1,"message":"164","line":44,"column":44,"nodeType":"147","messageId":"148","endLine":44,"endColumn":62},{"ruleId":"145","severity":1,"message":"165","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":14},{"ruleId":"145","severity":1,"message":"166","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":16},{"ruleId":"145","severity":1,"message":"167","line":13,"column":3,"nodeType":"147","messageId":"148","endLine":13,"endColumn":13},{"ruleId":"145","severity":1,"message":"168","line":14,"column":3,"nodeType":"147","messageId":"148","endLine":14,"endColumn":10},{"ruleId":"145","severity":1,"message":"169","line":21,"column":3,"nodeType":"147","messageId":"148","endLine":21,"endColumn":15},{"ruleId":"145","severity":1,"message":"170","line":24,"column":3,"nodeType":"147","messageId":"148","endLine":24,"endColumn":19},{"ruleId":"145","severity":1,"message":"171","line":26,"column":10,"nodeType":"147","messageId":"148","endLine":26,"endColumn":22},{"ruleId":"145","severity":1,"message":"172","line":34,"column":9,"nodeType":"147","messageId":"148","endLine":34,"endColumn":22},{"ruleId":"145","severity":1,"message":"173","line":35,"column":9,"nodeType":"147","messageId":"148","endLine":35,"endColumn":19},{"ruleId":"152","severity":1,"message":"174","line":48,"column":6,"nodeType":"154","endLine":48,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":52,"column":30,"nodeType":"178","messageId":"179","endLine":52,"endColumn":32},{"ruleId":"145","severity":1,"message":"180","line":68,"column":9,"nodeType":"147","messageId":"148","endLine":68,"endColumn":28},{"ruleId":"145","severity":1,"message":"169","line":23,"column":3,"nodeType":"147","messageId":"148","endLine":23,"endColumn":15},{"ruleId":"145","severity":1,"message":"181","line":62,"column":19,"nodeType":"147","messageId":"148","endLine":62,"endColumn":29},{"ruleId":"152","severity":1,"message":"182","line":76,"column":6,"nodeType":"154","endLine":76,"endColumn":8,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":140,"column":21,"nodeType":"186","messageId":"187","endLine":140,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":152,"column":17,"nodeType":"186","messageId":"187","endLine":152,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":159,"column":20,"nodeType":"186","messageId":"187","endLine":159,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":164,"column":17,"nodeType":"186","messageId":"187","endLine":164,"endColumn":19},{"ruleId":"145","severity":1,"message":"188","line":16,"column":10,"nodeType":"147","messageId":"148","endLine":16,"endColumn":25},{"ruleId":"145","severity":1,"message":"189","line":18,"column":10,"nodeType":"147","messageId":"148","endLine":18,"endColumn":25},{"ruleId":"145","severity":1,"message":"190","line":2,"column":31,"nodeType":"147","messageId":"148","endLine":2,"endColumn":45},{"ruleId":"145","severity":1,"message":"191","line":8,"column":7,"nodeType":"147","messageId":"148","endLine":8,"endColumn":19},{"ruleId":"145","severity":1,"message":"192","line":19,"column":8,"nodeType":"147","messageId":"148","endLine":19,"endColumn":12},{"ruleId":"145","severity":1,"message":"193","line":23,"column":23,"nodeType":"147","messageId":"148","endLine":23,"endColumn":39},{"ruleId":"145","severity":1,"message":"194","line":25,"column":8,"nodeType":"147","messageId":"148","endLine":25,"endColumn":13},{"ruleId":"145","severity":1,"message":"195","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":18},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'selectedValues' is assigned a value but never used.","'setSelectedValues' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["199"],"'CardActions' is defined but never used.","'CardContent' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'redirectToReferrer' is assigned a value but never used.","'Button' is defined but never used.","'MdMenu' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'setTodoLists' is defined but never used.","'setCompleteCount' is defined but never used.","'updateObject' is defined but never used.","'completeCount' is assigned a value but never used.","'totalTasks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'constructRatings', 'dispatch', and 'userId'. Either include them or remove the dependency array.",["200"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleSubmitJournal' is assigned a value but never used.","'setChecked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["201"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CgPlayListCheck' is defined but never used.","'FaJournalWhills' is defined but never used.","'actionCreators' is defined but never used.","'initialState' is assigned a value but never used.","'clsx' is defined but never used.","'GiMonumentValley' is defined but never used.","'axios' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [dispatch]",{"range":"210","text":"211"},"Update the dependencies array to be: [userId]",{"range":"212","text":"213"},"Update the dependencies array to be: [constructRatings, dispatch, userId]",{"range":"214","text":"215"},"Update the dependencies array to be: [dispatch, userId]",{"range":"216","text":"217"},[818,820],"[dispatch]",[1934,1936],"[userId]",[1309,1311],"[constructRatings, dispatch, userId]",[2505,2507],"[dispatch, userId]"]